big_bang = ["A", "B", "C", "D", "E"]

i = 0
while i < len(big_bang):
  print(big_bang[i])
  i = i + 1
  
여기서 값 i는 index 역할을 하는 것을 제외하고는 아무 역할을 하지않는다.
이때 for 문을 사용하면 훨씬 효율적이다

for member in big_bang:
  print(member)

for 문에서 member는 for loop의 execution 부분에서만 사용되고
사라지는 local variable이다.

A
B
C
D
E

for num in [1, 3, 5, 7, 9]:
    print(num * num)
 1
 9
 25
 49
 81
 
 range 함수
 1 ~ 10 까지 출력
 for i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
     print(i)
 너무 길고 귀찮다 하나하나 다 적기는
 range는 parameter를 하나, 두 개, 세개 사용이 가능하다
 
 for i in range(m)                      --> 0부터 m - 1 까지의 범위
    print(i)
 
 for i in range(n, m):                  --> n부터 m - 1 까지의 범위
    print(i)                               

for i in range(n, m, s):                --> n부터 m - 1 까지의 범위, 간격이 1이 아니라 s
    print(i)              
 
for i in range(3, 17, 3):    == for i in [3, 6, 9, 12, 15]:
    print(i)                       print(i)
    
range 장점
1. 간편함
2. 깔끔함
3. 메모리 효율성



numbers = [2, 4, 6, 8, 10, 12, 14, 16]

for i in range(len(numbers)):
    print(i, numbers[i])
 
or

for i in numbers:
    print(numbers.index(i), i)
