
               -- 정수 (integer): -3, -2, -1, 0 1,2,3
숫자(number) --  
               -- 소수 (Floating Point): 3.14, -7.3, 2.0
               
문자(string) "Hello", "World", "2"
             "HellO" + "World" --> "HelloWorld"
             "2" + "5" --> "25"

불린(Boolean)    True, False


숫자열
# 덧셈
print(4 + 7) 

# 뺄샘
print(2 - 4)

#곱셈
print(5 * 3)

#나머지
print(7 % 3)

#거듭제곱
print(2 ** 3)

# 덧셈
print(4.0 + 7.0) 소수형 + 소수형 = 소수형 11.0 

# 뺄샘
print(5 * 3.0) 소수형 + 정수형 = 소수형 15.0                

소수형 > 정수형

예외)
print(7 / 2) --> 3.5    정수형/정수형 = 소수형
print(7.0 / 3) --> 3.5  소수형/정수형 = 소수형
print(6.0 / 2/0) --> 3.0 소수형/소수형 = 소수형
(나중에 형변환을 배우면 정수형으로 바꿀 수 있다)

print(2 + 3 * 2) --> 8
print(2 * (2 + 3)) --> 10


파이썬에는 숫자형(정수형과 소수형), 문자열, 불린, 리스트, 사전, 튜플 등 다양한 자료형들이 있다.
+ 덧셈 (addition)
- 뺄샘 (substraction)
* 곱셈 (multiplication)
/ 나눗셈 (division)
% 나머지 (modulo)
** 거듭제곱 (exponentiation)


문자열 (string)
#문자열 (string) = 키보드로 입력할 수 있는 글자들을 표현하는 자료형
ex) '코드잇' , "코드잇" (시작한 걸로 끝내야 함) 

문자열 연결 (String Concatenation)
"Hello" + 'World' --> "HelloWorld"

"Hello" *3 --> "HelloHelloHello"

(o)print("I'm excited to learn python!")
(x)print('I'm excited to learn python!')

print("Hello" + "World") -->"HelloWorld"
print("Hello"*3)  --> "HelloHelloHello"

print(3+5)  --> 8
print("3" + "5") --> "35"


형변환 (Type Conversion / Type Casting)
print(int(3.8)) --> 3
#int --> integer (정수)

print(float(3)) --> 3.0
#float --> floating Point(소수)

#문자열 --> 숫ㅈ형
print(int("2") + int("5")) == print(2+5) --> 7
print(float("1.1") + float("2.5")) #print(1.1+2.5)
print(str(2) + str(5) ) == print("2" + "5") --> "25"

print("제 나이는 " + 7 + "살입니다. " ) --> error: cannot concatenate 'str' and 'int' objects, in order to fix it
print("제 나이는 " + str(7) + "살입니다.") --> 제 나이는 7살입니다.

#주의!!
print(int("Hello World")) --> 논리적으로 형변환 자체가 불가함

나눗셈은 무조건 소수형

-문자열 포맷팅(String Formatting)
year = 2016
month = 1
day = 16
day_of_week = "일"

print("오늘은 + str(year) + "년 " + str(month) + "월 " + str(day) + "일 " + day_of_week + "요일입니다.")
- 너무 코드가 길어지고 구질구질함, 이러한 문제점을 고치기 위해
print("오늘은 %d년 %d월 %d일 %s요일입니다. " %(year, month, day, day_of_week) )
정수 -> 문자 %d = (decimal integar)     문자열은 %s

print("오늘은 %d년 %d월 %d일 %s요일입니다. " %(year, month, day + 1, "월") )
--> 오늘은 2016년 1월 17일 월요일 입니다.

print(1.0/3) --> 0.3333
print("1 나누기 3은 %d %(1.0/3) --> 0
소숫점을 유지하고 싶으면
print("1 나누기 3은 %f %(1.0/3) --> 0.33333333333333
소숫점 둘째 자리까지 반올림시킨 값을 얻고 싶을 때
print("1 나누기 3은 %2f %(1.0/3) --> 0.33

%d 정수(integer)
%f 소수(Floating Point)
%s 문자열(String)


Boolean
-George Boole --> 불 대수 (Boolean Algebra)
명제: 참 또는 거짓이 확실한 문장

x   y   x and y
T   T      T
T   F      F
F   T      F
F   F      F

x   y    x or y
T   T      T
T   F      T
F   T      T
F   F      F

X   Not x
T     F
F     T
print(True)
print(False)
따옴표랑 사용하면 문자이다
print(not Ture)
print(Ture or False)

print(2>1) T
print(2<1) F
print(3>=2) T
print("Hello" == "Hello") True
print(2>1 and "Hello" == "Hello") T
print(not not True) not false = true
print(not not False) not true = false
print(7 == 7 or (4<3 and 12>10) )
        T             F          == T
x = 3
print(x>4 or not (x <2 or x == 3)
       F             F           == F
       
조건 연산 부호 (conditional operator)
연산자     뜻
  >       초과(greater than)
  <       미만(less than)
  >=      이상(greater than or equal to)
  <=      이하(less than or equal to)
  ==      같다(equal to)
  !=      같지 않다(not equal to)
  
 Type 함수
 print(type(1))
 print(type(1.0))
 print(type("1"))
 print(type("True"))
 print(type(True))
 print(type(print)) --> 내장 함수 (class 'builtin_function_or_method')
 
 section1-자료형 꿀팁 다시 정리하기
 
 Floor Division( // 연산자는 나눗셈 연산 후 결과값을 내림 합니다. 즉 소수부분을 버리고 정수부분만 남겨두는 것)
 x = int(5/2)
 print(x)
 2
 
 x = 5//2
 print(x)
 2
 
 / 와 //의 차이
 print(7/4)     --> 1.75
 print(int(7/4)) --> 1
 print(7//4)    --> 1
 
 주의할 점은 소수형이 있을 경우 결과값이 소수형으로 나온다는 것.
 print(5.0 // 2)  --> 2.0
 print(5 // 2.0)  --> 2.0
 print(5.0 // 2.0) --> 2.0
 
 반올림
 round는 소수형을 반올림해줍니다.
 print(round(1.421, 1)) # 1.421을 소수점 1째 자리로 반올림    1.4
 print(round(2.7862, 2)) # 2.7862을 소수점 2째 자리로 반올림  2.79
 print(round(3.141592, 4)) # 3.141592을 소수점 4째 자리로 반올림 3.1416
 print(round(4.34)) # 4.34를 소수점 0번째 자리로 반올림 4
 
 \n (Newline Character) 다음 줄 (키보드의 엔터키와 동일한 효과)
 print("안녕하세요\n코드잇입니다\n여러분 모두를\n환영합니다")
 안녕하세요
 코드잇입니다
 여러분 모두를
 
